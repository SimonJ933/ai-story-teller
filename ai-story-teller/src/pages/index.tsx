import Head from "next/head";
import style from "@/styles/Home.module.css";
import Header from "@/components/Molecules/Header/Header";
import WindowBox from "@/components/Organism/WindowBox/WindowBox";
import InputBox from "@/components/Atoms/InputBox/InputBox";
import { useState } from "react";
import SelectBox from "@/components/Molecules/SelectBox/SelectBox";
import { listaGeneri } from "@/constats/common";
import Button from "@/components/Atoms/Button/Button";
import { GenerateContentCandidate, GoogleGenerativeAI } from "@google/generative-ai";
import SwitchBox from "@/components/Molecules/SwitchBox/SwitchBox";
export default function Home() {
  const [protagonista, setProtagonista] = useState("");
  const [antagonista, setAntagonista] = useState("");
  const [genere, setGenere] = useState("");
  const [response, setResponse] = useState("");
  const [pegi18, setPegi18] = useState(false);
  const [loading, setLoading] = useState(false);
  const [ambientazione, setAmbientazione] = useState("");

  const handleGenerate = async () => {
    setLoading(true);
    const prompt = `genere un racconto ${genere}, per ${
      pegi18 ? "adulti" : "bambini"
    }, per ${ambientazione}, con il protagonista ${protagonista} e l'antagonista ${antagonista}`;

    if (process.env.NEXT_PUBLIC_GEMINI_KEY) {
      const genAI = new GoogleGenerativeAI(process.env.NEXT_PUBLIC_GEMINI_KEY);
      const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
      const result = await model.generateContent(prompt);
      const output = (result.response.candidates as GenerateContentCandidate[])[0].content.parts[0].text;
      if (output) {
        setResponse(output);
      }
    }
    setLoading(false);
  };

  return (
    <>
      <Head>
        <title>AI STORY TELLER</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="icons8-scroll-64.png" />
      </Head>
      <main className={style.main}>
        <Header title="AI-Story-Teller" />

        <div className={style.content}>
          <WindowBox title="Create A Story">
            <div className={style.container}>
              <div className={style.inputGroup}>
                <div className={style.img}>
                  <img src="icons8-medieval-64.png" />
                </div>
                <InputBox label="MAIN CHARACTER:" value={protagonista} setValue={setProtagonista} />
              </div>

              <div className={style.inputGroup}>
                <div className={style.img}>
                  <img src="icons8-medieval-62.png" />
                </div>
                <InputBox label="ANTAGONIST:" value={antagonista} setValue={setAntagonista} />
              </div>

              <div className={style.inputGroup}>
                <div className={style.img}>
                  <img src="icons8-map-50.png" />
                </div>
                <InputBox label="SETTING:" value={ambientazione} setValue={setAmbientazione} />
              </div>

              <div className={style.inputGroup}>
                <div className={style.img}>
                  <img src="icons8-comedy-48.png" />
                </div>
                <SelectBox label="CHOOSE A GENRE:" list={listaGeneri} setAction={setGenere} />
              </div>
            </div>

            <SwitchBox label="CONTENT" value={pegi18} setValue={setPegi18} />

            <Button
              label="Create Story"
              onClick={handleGenerate}
              disabled={protagonista.trim().length <= 0 || antagonista.trim().length <= 0 || genere.trim().length <= 0}
            />

            {loading && (
              <div className={style.loadingContainer}>
                <p className={style.loadingText}>Loading...</p>
              </div>
            )}

            {!loading && response && <div className={style.result}>{response}</div>}
          </WindowBox>
        </div>
      </main>
    </>
  );
}
